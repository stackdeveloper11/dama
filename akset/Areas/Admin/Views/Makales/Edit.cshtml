@model akset.data.Makale


<style>
    .sekle {
        height: 100%;
        width: auto;
        display: inline-block;
        font-size: 14px;
        position: relative;
        margin: 0;
        line-height: 34px;
        font-weight: 400;
        letter-spacing: 0;
        margin-left: 8px;
    }
</style>
<div id="content">
    <div class="row">
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa fa-picture-o fa-fw "></i>
                Makale
                <span>
                    >
                    Makale Düzenle
                </span>
            </h1>
        </div>
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6 text-align-right">
            <div class="page-title">
                <a href="/admin/makales/makale" class="btn btn-success">Makale Listesi</a>
            </div>
        </div>
    </div>

    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- row -->
        <div class="row">

            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget jarviswidget-color-blueDark" id="wid-id-0" data-widget-editbutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-pagelines"></i> </span>
                        <h3 class="sekle">Makale Düzenle</h3>
                    </header>
                    <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget Adi,Baslik,Aciklama,Icerik,Durum,tarih content -->
                        @using (Html.BeginForm("Edit", "Makales", FormMethod.Post, new { @class = "smart-form" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="widget-body">
                                <table class="model-state">
                                    @foreach (var item in ViewContext.ViewData.ModelState)
                                    {
                                        if (item.Value.Errors.Any())
                                        {
                                            <tr>
                                                <td><b>@item.Key</b></td>
                                                <td>@((item.Value == null || item.Value.Value == null) ? "<null>" : item.Value.Value.RawValue)</td>
                                                <td>@(string.Join("; ", item.Value.Errors.Select(x => x.ErrorMessage)))</td>
                                            </tr>
                                        }
                                    }
                                </table>

                                <style>
                                    table.model-state {
                                        border-color: #600;
                                        border-width: 0 0 1px 1px;
                                        border-style: solid;
                                        border-collapse: collapse;
                                        font-size: .8em;
                                        font-family: arial;
                                    }

                                        table.model-state td {
                                            border-color: #600;
                                            border-width: 1px 1px 0 0;
                                            border-style: solid;
                                            margin: 0;
                                            padding: .25em .75em;
                                            background-color: #FFC;
                                        }
                                </style>

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <fieldset>


                                    @if (!string.IsNullOrEmpty(Model.resimi))
                                    {
                                     <section>
                                         <label class="label">Resim</label>
                                         <img src="~/MakaleResimleri/@string.Concat(Model.resimi,"?d=",new Random().Next(100,10000))" class="img-responsive" />
                                       
                                     </section>
                                    }
                              

                                    <section>
                                        <label class="label">Resim (450X300)</label>
                                        <div class="bir" style="width:450px;height:300px">
                                            <input type="file" id="my-cropper" />
                                        </div>
                                        <input type="text" name="resimi" id="resimi" class="hidden" value="@Model.resimi" />
                                    </section>

                                    <section>
                                        <label class="label">Kategori</label>
                                        @Html.ValidationMessageFor(model => model.KategoriId,"", new { @class = "text-danger" })
                                        <label class="select">
                                            @Html.DropDownList("KategoriId", null, htmlAttributes: new { @class = "form-control" })
                                        </label>
                                        <div class="note">
                                            <strong>Maksimum</strong> 300 Karakter.
                                        </div>
                                    </section>
                                    <section>
                                        <label class="label">Başlık</label>
                                        @Html.ValidationMessage("bsl", "", new { @class = "text-danger" })
                                        @Html.ValidationMessageFor(model => model.baslik, "", new { @class = "text-danger" })
                                        <label class="input">
                                            @Html.EditorFor(model => model.baslik)
                                        </label>
                                        <div class="note">
                                            <strong>Maksimum</strong> 300 Karakter.
                                        </div>
                                    </section>
                                    <section>
                                        @Html.ValidationMessageFor(model => model.aciklama, "", new { @class = "text-danger" })
                                        <label class="label">Açıklama</label>
                                        <label class="input">
                                            @Html.EditorFor(model => model.aciklama)
                                        </label>
                                    </section>
                                    <section>
                                        <label class="label">Keywords</label>
                                        <label class="input">
                                            @Html.EditorFor(model => model.keywords)
                                        </label>
                                    </section>
                                    <section style="height:400px" >
                                        @Html.ValidationMessageFor(model => model.Icerik, "", new { @class = "text-danger" })
                                        <label class="label">İcerik</label>
                                        <div id="summernote"></div>
                                        <label class="input hidden">
                                            @Html.EditorFor(model => model.Icerik, new { @class = "hidden" })
                                        </label>
                                    </section>
                                    <section>

                                        <label class="label">Durum</label>
                                        <label class="checkbox">
                                            <input type="checkbox" name="aktifi" value="@Model.aktif" @string.Concat(Model.aktif ? "checked=checked" : "")>
                                            <i></i>Aktif(İşaretli)/Pasif(İşaretsiz)
                                        </label>
                                    </section>
                                    <input type="hidden" name="cacheno" value="@string.Concat(new Random().Next(10,10000),"-",new Random().Next(100,10000))" />
                                </fieldset>
                                <footer>
                                    <div class="btn btn-success" onclick="yolla()">Kaydet</div>
                                    <input type="submit" id="smt" class="btn btn-success hidden" name="submit" value="Kaydet" />
                                </footer>
                            </div><input type="checkbox" name="aktif" class="hidden">
                            <input type="hidden" name="tarih" value="@DateTime.Now" />
                        }
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>


@section pagespecific {
<script src="~/Areas/Admin/Scripts/jquery.validate.min.js"></script>
<script src="~/Areas/Admin/Scripts/jquery.validate.unobtrusive.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.4/summernote.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.4/summernote.js"></script>
<script src="~/Areas/Admin/Content/summernote-tr-TR.js"></script>
<link href="/Areas/Admin/Content/slim2/slim.min.css" rel="stylesheet" />
<script src="/Areas/Admin/Content/slim2/slim.jquery.min.js"></script>
<script>
    var $ccr;
    $(document).ready(function () {
        $ccr = $("#my-cropper").slim({
            instantEdit: true,
            ratio: '450:300',
            size: {
                width: 450,
                height: 450
            },
            rotateButton: true,
            download: false,
            label: 'Yeni Resim Yükle',
            buttonConfirmLabel: 'Ok'
        });

            $("#KategoriId").select2({
                language: "tr",
                placeholder: "Kategori Seçiniz"
            });
            $('#summernote').summernote({
                callbacks: {
                    // Clear all formatting of the pasted text
                    onPaste: function (e) {
                        var bufferText = ((e.originalEvent || e).clipboardData || window.clipboardData).getData('Text');
                        e.preventDefault();
                        setTimeout(function () {
                            document.execCommand('insertText', false, bufferText);
                        }, 10);
                    },
                    onImageUpload: function (files, editor, welEditable) {

                        for (var i = files.length - 1; i >= 0; i--) {
                            sendFile(files[i], this);
                        }
                    }
                },
                minHeight: 300,
                maxHeight: null,
                focus: true,
                lang: 'tr-TR',
                toolbar: [
                    ['style', ['style', 'bold', 'italic', 'underline', 'clear']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['height', ['height', 'fullscreen', 'undo', 'redo', 'picture']]
                ]
            });
            $("#summernote").summernote("code", $("#Icerik").val());
        })
</script>
    <!-- PAGE RELATED PLUGIN(S) -->
    <script type="text/javascript">
    // DO NOT REMOVE : GLOBAL FUNCTIONS!
        function sendFile(file, el) {
            var form_data = new FormData();
            form_data.append('file', file);
            $.ajax({
                data: form_data,
                type: "POST",
                url: "/Admin/Makales/attachment_uploadmakale",
                cache: false,
                contentType: false,
                processData: false,
                success: function (url) {
                    $(el).summernote('editor.insertImage', "/MakaleResimleri/" + url);
                }
            });
        }
        function yolla() {
            $(".bir .slim .slim-btn-group .slim-btn-remove").click(function () {
                $('.bir .slim .slim-area .slim-result img.out').attr('src', '');
                $('.bir .slim .slim-area .slim-result img.in').attr('src', '');
            })
            if (typeof $(".bir .slim-area .slim-result img.in").attr("src")==="undefined") {

            }
            else {
                $("#resimi").val($(".bir .slim-area .slim-result img.in").attr("src"));
            }
          

        var atLeastOneIsChecked = $('input[name="aktifi"]:checked').length > 0;
        if (atLeastOneIsChecked) {
            $('input[name="aktif"]').prop('checked', true);
            $('input[name="aktif"]').val("true");
        }
        else {
            $('input[name="aktif"]').prop('checked', false);
            $('input[name="aktif"]').val('false');
        }
        $("#Icerik").val(escape($('#summernote').summernote('code')));
        $("#smt").click();
    }
    </script>


}



<style>
    .modal-open {
        overflow: hidden;
    }

    .modal {
        display: none;
        overflow: hidden;
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 1050;
        -webkit-overflow-scrolling: touch;
        outline: 0;
    }

        .modal.fade .modal-dialog {
            -webkit-transform: translate(0, -25%);
            -ms-transform: translate(0, -25%);
            -o-transform: translate(0, -25%);
            transform: translate(0, -25%);
            -webkit-transition: -webkit-transform 0.3s ease-out;
            -o-transition: -o-transform 0.3s ease-out;
            transition: transform 0.3s ease-out;
        }

        .modal.in .modal-dialog {
            -webkit-transform: translate(0, 0);
            -ms-transform: translate(0, 0);
            -o-transform: translate(0, 0);
            transform: translate(0, 0);
        }

    .modal-open .modal {
        overflow-x: hidden;
        overflow-y: auto;
    }

    .modal-dialog {
        position: relative;
        width: auto;
        margin: 10px;
    }

    .modal-content {
        position: relative;
        background-color: #ffffff;
        border: 1px solid #999999;
        border: 1px solid rgba(0, 0, 0, 0.2);
        border-radius: 6px;
        -webkit-box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
        box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
        -webkit-background-clip: padding-box;
        background-clip: padding-box;
        outline: 0;
    }

    .modal-backdrop {
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 1040;
        background-color: #000000;
    }

        .modal-backdrop.fade {
            opacity: 0;
            filter: alpha(opacity=0);
        }

        .modal-backdrop.in {
            opacity: 0.5;
            filter: alpha(opacity=50);
        }

    .modal-header {
        padding: 15px;
        border-bottom: 1px solid #e5e5e5;
    }

        .modal-header .close {
            margin-top: -2px;
        }

    .modal-title {
        margin: 0;
        line-height: 1.42857143;
    }

    .modal-body {
        position: relative;
        padding: 15px;
    }

    .modal-footer {
        padding: 15px;
        text-align: right;
        border-top: 1px solid #e5e5e5;
    }

        .modal-footer .btn + .btn {
            margin-left: 5px;
            margin-bottom: 0;
        }

        .modal-footer .btn-group .btn + .btn {
            margin-left: -1px;
        }

        .modal-footer .btn-block + .btn-block {
            margin-left: 0;
        }

    .modal-scrollbar-measure {
        position: absolute;
        top: -9999px;
        width: 50px;
        height: 50px;
        overflow: scroll;
    }

    @@media (min-width: 768px) {
        .modal-dialog {
            width: 600px;
            margin: 30px auto;
        }

        .modal-content {
            -webkit-box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
        }

        .modal-sm {
            width: 300px;
        }
    }

    @@media (min-width: 992px) {
        .modal-lg {
            width: 900px;
        }
    }
</style>