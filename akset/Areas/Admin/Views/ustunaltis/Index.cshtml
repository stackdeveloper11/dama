@model List<akset.data.ustunalti>

@{
    ViewBag.Title = "Index";
}


<div id="content">
    <section id="widget-grid" class="" style="padding:0">
        <!-- row -->
        <div class="row">
            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Menüler</h2>
                    </header>
                    <div>
                        <div class="widget-body" style="padding: 10px;">
                            <p>
                                <a href="/Admin/ustunaltis/create/@ViewContext.RouteData.Values["id"].ToString()" class="btn btn-success btn-xs">Yeni Menü Ekle &rarr;</a>
                            </p>
                            <div class="table-responsive">
                                <table class="table table-bordered table-striped table-hover">
                                    <thead>
                                        <tr>
                                            <th>
                                               Kategori
                                            </th>
                                            <th>
                                             Üst Menu
                                            </th>
                                            <th>
                                              Adı
                                            </th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Kategori.adi)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.ustmenu.ustmenuadi)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.ustunaltiadi)
                                                </td>
                                                <td>
                                                    @Html.ActionLink("Düzenle", "Edit", new { id = item.Id }) |
                                                    @Html.ActionLink("Sil", "Delete", new { id = item.Id })
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
@section pagespecific{
    <script>
        $(document).ready(function () {
            var responsiveHelper_dt_basic = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "order": [[ 0, "desc" ]],
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });
        })
    </script>
}